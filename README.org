* Introduction

Just a storage of the github locations of my emacs repositories.

To copy it yourself, simply:

|git clone --recursive https://github.com/orgcandman/emacs-plugins.git

* Setup

Here's the thing, I've tried to keep the configuration as minimal as possible 
(ie: leave things to the defaults) so that key bindings aren't totally foreign
to others, and so that the integration or extension can truly be custom. As 
such, I'm probably going to forget things, but the following lists all of the
known dependencies.

- autotools
- texinfo

You _DEFINITELY_ need to run

=cd emacs-jabber && autoreconf -i && ./configure && make=
=cd doxymacs && ./bootstrap && ./configure && make=

Post clone, you should probably run something like the following:

=find . -type f -name \*.el -exec emacs --batch --eval '(byte-compile-file "{}")' \;=

This should make your load time reasonable.


** Basic development

- Git 1.7.0+ (used for magit, and you probably already have this... just for posterity)
- 

** Python development

- Python 2.7+
- lxml
- jedi (pip install jedi)
- pyflakes (pip install pyflakes)
- not sure if there are others, currently

** C++ development (which uses flymake)

- clang
- gnu make and makefiles /with the correct syntax-check target/ (if anyone knows how to eliminate this, please let me know)
- cppcheck
- GNU global

** Web development

- node.js (recent, please)
- jshint (npm install jshint ; then add jshint to your path)

* Info

The following lists any customizations and/or deviations included with this setup
** Basic Usage
The system is set up to do the following out-of-the-box:
1. Globally enable 'projectile' for faster navigation - all default bindings, but includes 'C-c f' to have a faster 'projectile-find-file' experience
2. Globally enable 'auto-complete' and 'yasnippets' (feel free to write a few good ones and store them in your snippets dir)
3. Set up a few nice defaults (including line numbering in specific modes)
4. Configure expand-region to be 'C-='
5. Configure magit-stats at 'C-c g s'

** C++ Mode

- Uses spaces, set to 4, instead of tabs
- Does not use google mode (you can figure that out yourself, if you want it)
- Sets up a more intelligent compile (see the /simple-emacs-cxx-devel.el/ file) bound to 'C-c C-l'
- Automatically enables linum-mode
- Automatically tries to do flymake (including flymake-cppcheck)

** Web mode

- js2refactor is 'C-c C-m <chord>' (see [[https://github.com/magnars/js2-refactor.el][JS2 Refactor Mode]] for more info)
- Tries to enable flymake for js
- Sets up nodejs interaction (using C-x C-e for region evaluation)
